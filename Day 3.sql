drop table if exists #test
create table #test (id int identity, s varchar(100))

insert into #test values
('.#..........#......#..#.....#..'),
('....#.............#.#....#..#..'),
('.....##...###....#..#.......#..'),
('.#....#..#......#........#.....'),
('.#.........###.#..........##...'),
('...............##........#.....'),
('#..#..........#..##..#....#.#..'),
('....#.##....#..#...#.#....#....'),
('...###...#............#.#......'),
('#.........#..#...............#.'),
('#.#...........#...............#'),
('..#.#......#..###.#...#..##....'),
('.....#..#..#..#............#...'),
('......#.......#.....#....##....'),
('#......#...#.......#.#.#.......'),
('...........##.#.............#..'),
('.#.........#..#.####...........'),
('..#...........#....##..........'),
('#...........#.......#..#.#.....'),
('.....##...#.....#..##..#..#....'),
('#.#..........................#.'),
('##.....#..........#.......##..#'),
('....#..#............#.#.#......'),
('.......#.......#..#............'),
('...#.#..........#..#.....#.....'),
('.....#...##..##.....##........#'),
('.#.....#........##............#'),
('..#....#.#...#.....#.##........'),
('........##.....#......##...##..'),
('......#..................#.....'),
('..##......##.....##...##.......'),
('......#..#...##......##........'),
('.#..#..#.#.....................'),
('.#....#.#...#....#.......##...#'),
('.####.#..##...#.#.#....#...#...'),
('.#....#.....#...#..#.........##'),
('...........#.#####.#.#..##..#..'),
('.#......##...#..###.#.#....#...'),
('...#.....#........#..###...#...'),
('.......#................##.#...'),
('.##...#.#..................#...'),
('..#........#....#..........#..#'),
('..#.........#..................'),
('...#.#..........#.#..##........'),
('...#.##..........##...........#'),
('...........#..#........#.......'),
('.#....#.#...........#....#.##..'),
('.#...#..#............#....#.#..'),
('...#..#...#.........####.#.#...'),
('..#...#...........###..#...##.#'),
('......##...#.#.#....##....#....'),
('#..#.#.....##....#.......#...#.'),
('.#.....#.....#..#..##..........'),
('................#.#.#...##.....'),
('.#.....#............#......#...'),
('...#...#..#.#....######.....#..'),
('..#..........##......##.....#..'),
('......#..#.##...#.#............'),
('....#.......#..#...#..#.#......'),
('#......##.#..#........#.....#..'),
('..#.........#..#.........#.....'),
('..#.........##.......#.#.#..##.'),
('...#....##.................#.#.'),
('...#........##.#.......#.##..##'),
('....#.#...#...#....#...........'),
('.........#....##........#......'),
('...#........#..#.......#...#...'),
('#.......#....#...#...........#.'),
('.......#......#...##...........'),
('.#.#......##.#.......#..#...#..'),
('.#.....##.#...#......#..#......'),
('........#.............#.#..#..#'),
('#...........#....#.....#.##.#.#'),
('................#...#........##'),
('#..#.##..#.....#...##.#........'),
('#.....#.#..##......#.#..#..###.'),
('....#...#.....#................'),
('......#...#..##...........#....'),
('......#.........##.#...#......#'),
('#...#.#.....#..#.#..#..#......#'),
('...#.#..#..#.#........###.#....'),
('..#...#.......#.#.......#......'),
('...#....#.....#.......#......#.'),
('#...........#....#..#..#.......'),
('..........##......##.........##'),
('##............#..#.#...#..#.#..'),
('..#.##....##...##..#...#.......'),
('............##.##..###..#..#...'),
('......#....##...##.........#...'),
('......#..#.#......####..#......'),
('..............#....#..#..##....'),
('...#.#..#...##.#.......#.#.....'),
('...#.#....#.......#..#..#..##..'),
('..........#.........#..........'),
('...#.....#............#.....##.'),
('....#.#......................#.'),
('.........#...#.#...#...........'),
('...#........#..##.....#...#.#..'),
('......##.....#.#..#...###.#...#'),
('#....#..#.#.....#...#..........'),
('.#.##.###.........#..##.#....#.'),
('#.........#....#........#...#..'),
('...........#...............#..#'),
('###....................#....#..'),
('.................#....#.....#..'),
('..........#.........#.......#..'),
('........#..#....#.....##.......'),
('#...##.#...#.#.#............#..'),
('....#.........##.#.#..#...###..'),
('.##..............#...#.....##.#'),
('###...#..................#...#.'),
('.....#..#...#..#...#...........'),
('.#.................#...#..#..#.'),
('.#.........###...#.##......###.'),
('.####............#......#..#...'),
('....#........#..#.#....#..##..#'),
('..#....#.#...#.#.....##....#...'),
('..###..#..#....##....#..#..#...'),
('...#.#.....#.#....#.....#......'),
('.....#..........#.#............'),
('.......#...........#.#..#..#...'),
('......##........#.....#.......#'),
('..#.#.....##............#..##..'),
('....#.#........#...........##..'),
('#......#..##........#.....#....'),
('#...#...###..............##....'),
('#..#........#........#.....##.#'),
('......##.####........#..#....#.'),
('...##..#.##.....#...#...#..#...'),
('#..............###.##..##......'),
('......................#.....#..'),
('.........#.#.......#...##.#....'),
('....#......#..........###..#...'),
('#...####.#.................#..#'),
('##.#....#....#.....##..#....#.#'),
('..#.....#..##.........#.#..#.#.'),
('.....#.....#...................'),
('#....##.#.........###....#.....'),
('#........#.#.......#.#.........'),
('.##.#...#.....#...#.......##.##'),
('#..#.............#.............'),
('..........#.........####.......'),
('..##..............#..#.#.......'),
('..#.#.....#........#......##...'),
('#.#.......#.#................#.'),
('.#...#........#....##....#.##..'),
('.#..#...#...#......#.#.........'),
('......##............#.........#'),
('.#....#.#.#.........#..#..##...'),
('#....#......#.......###........'),
('.......#........##..#...#..###.'),
('#.##..........#..###..#..#.#...'),
('.#..#....#..........#.#.##.....'),
('#..#...#.#...#..#..#.#...#.....'),
('.........#...#.#............#..'),
('#..#.............#......##.##..'),
('...##.......#..................'),
('....#......#...#.....#......#..'),
('.....##..#......#....#....#....'),
('....#...#...#...#.....#........'),
('.#....#........##....#..#.#...#'),
('#.......#..#......#......#...#.'),
('..............#......#......#..'),
('#......#..##...#........#....#.'),
('#..#..#..#.....#..#........#...'),
('#...#.....#...#..........#...##'),
('........#.......#...#.....#.#..'),
('...................##.......#..'),
('.#......#........#.##..#....#..'),
('.....#.....#...#..#..#......#..'),
('........##.#..##.........#....#'),
('.........#.......#.............'),
('............#.###.###..#.#.....'),
('.............#....#...........#'),
('..#.....#.#..##.##........#....'),
('...#....#....#.........#.....#.'),
('.#............#......#.........'),
('..#.#..........##.##......#.#..'),
('....#.........................#'),
('..........##...................'),
('#.......#.#..............#...#.'),
('...##..#..##...##.#..#.#.#.....'),
('...########.#..##....#.........'),
('##.#........##.....#........#..'),
('#.#.....#........#..#....#...#.'),
('..#............#.......###.##.#'),
('#.#............................'),
('...#.#.#....#..........#..#....'),
('..###.#.....#.#..#.............'),
('#........#..........#.#..#.....'),
('...........#..#....#.........#.'),
('..#............#.....#.#.......'),
('#.#............#..#.....#.#.#..'),
('...#...#.......................'),
('.#.#.#...##.............#..#..#'),
('..#.........#..#.....##....##..'),
('.#...#............#.......#..##'),
('....#..#.#.#...####............'),
('#.......#....#..##....##....#..'),
('.....##.#....#.#..#.......#....'),
('...........#.......#....##.#.##'),
('..........#...#....##...#.#....'),
('..#.............#.............#'),
('....#..#.....#....#.#..###.#...'),
('.......#.##.#......#...##...#.#'),
('.#..#.#..#.#.......#....###.#..'),
('#..........##...##.........##..'),
('##..#......##.#.####.#.....#...'),
('....#.#...#........#..##..#.#..'),
('.#.............................'),
('.##..#.#...##.....#....#.....#.'),
('..##.........#......#.........#'),
('.#.#........#...#.#.#....##....'),
('.#.................##.........#'),
('...#...............#....#......'),
('..#...#..#..........###..#...##'),
('..........#..#..........##..#..'),
('...#.............#.##.#...#....'),
('...#...........#...............'),
('......#.........##.#...#...#...'),
('...#.#........#..#.....#..#...#'),
('#.#...#....##...#.....#....#...'),
('#.#.#..#.....#.........#.......'),
('##...........#..####...........'),
('#..........#........###...#..#.'),
('#..#.......#....#......###.....'),
('..#.....#......#.###......##...'),
('...#.##..#............#...#....'),
('.##........#.....#.............'),
('#....#.##..#...........##.#.#..'),
('..#.....#.#....#.......#......#'),
('#..#.......#............#......'),
('#.......##....#...#..#.........'),
('.................#..##.........'),
('..............#..#..#.##.......'),
('#.#.......................#..#.'),
('..#..##...........#....#..#..#.'),
('...#....#.......#.......#....#.'),
('.....#.#..#.#.....#.........#.#'),
('..#.#.........#.....#..........'),
('...#.#.#.......#.#.......#.#..#'),
('...##...#.#.#.....#.....##....#'),
('##.......#.#.#.#.......#...##..'),
('....#.#...........#......#.....'),
('.#.....#........####...........'),
('#......#........#.....#..#..#..'),
('..#..#......#...##.......#....#'),
('#........#..........#.....#.#..'),
('.#...........#.....#.....#.....'),
('..........#..#...#....#....##..'),
('.....#.#..........#.....##..#..'),
('......#.........##.............'),
('..#..#.....##......##........#.'),
('.#.#.#.#..#.#..#.......#.......'),
('#.#...####.#.#....#.#........#.'),
('....#...#.....#......#..##.....'),
('##.........#.........#..#.#..#.'),
('..#.#........#.#........#.##...'),
('#....#......#...#....#.........'),
('.##.............###....###.#...'),
('..##.#.......#...#..#......#...'),
('.....#.##..................#...'),
('.....#.#...#..#................'),
('........#..#..#...........#.#.#'),
('....#.###.....#..#.#.....##..##'),
('....##.#.........#..##.........'),
('.##........#......#..###..#.##.'),
('.........##...............#.##.'),
('..#...............#.#...#..#.#.'),
('....#....##.....#...#..#.....#.'),
('#...#.....................#....'),
('.....#.#............#...##.#.#.'),
('...#......#.......#........##.#'),
('.#.#..#.#....#.##.......##....#'),
('.........#...#..##.........#...'),
('.#...#..#....................#.'),
('.......#...#........#.#..#.#.##'),
('.#.............#......#..#.#...'),
('............##.........#....#.#'),
('#.........##..##...............'),
('.#.#....#.#..#..........##.....'),
('..###...#..#.#.......#..#...##.'),
('.....#....#.#............##.#..'),
('##.....#.#..#..#...............'),
('...##...#......#....#..#..#....'),
('.............#....#..#..##...##'),
('#.......#............#....##..#'),
('..#.##.....#.......#....#....#.'),
('..........#...#.............###'),
('..#....#.#..................#..'),
('#.#...#..#...........#.........'),
('....##..#..##..#..........#....'),
('#...#...#.#....#.##...#.......#'),
('#......##.#...##..#.....#......'),
('....#.......#.#............#...'),
('#....#...........###...........'),
('#..#...#...#......#.#..#.......'),
('...............................'),
('#........##.............#.#....'),
('.............#........#....#.##'),
('........##.####.....##..#......'),
('#.#.#.#.......##....##.....#...'),
('.......#..##..#...#............'),
('..........#...#....#..#.#.#.##.'),
('...#........##....#...#........'),
('#..#.##....#....#........#.....'),
('.##...#.....##...#.............'),
('.#...#..#.#.....#.##.....#.....'),
('...........#.............#...#.'),
('.#..#................#...#..#..'),
('#..........#......##..##....#..'),
('####..#...........#.#....#.....'),
('..#.#.##..#...##........#....##'),
('.#.......##........#.....#.....'),
('............#................#.'),
('.#...#...#.....#.#....#.##..#..'),
('..#.............#.#....#.#.....'),
('..............#...........#....'),
('..............#........#....#..'),
('..........##........#..#...#...'),
('...#.#....#.#....#..#.....#...#'),
('..#......#...........#..#..#.#.'),
('.....##.....#.####....#........')
/*
select 
	s,
	len(s),
	id,
	case when ((id * 3) - 2) % len(s) = 0 then 31 else ((id * 3) - 2) % len(s) end,
	replace(stuff(s, case when ((id * 3) - 2) % len(s) = 0 then 31 else ((id * 3) - 2) % len(s) end, 1, case when substring(s, case when ((id * 3) - 2) % len(s) = 0 then 31 else ((id * 3) - 2) % len(s) end, 1) = '#' then 'X' else 'O' end), '#', '.') as PatternReplaced,
	--(((((id-1) % len(s))+1)*3) % len(s)) % 10 as PatternPos,
	substring(s, ((((id-1) % len(s)) % 11) * 3) + 1, 1) as TreesInPath
	--sum(case when substring(s, ((((id-1) % len(s))+1)*3) % len(s), 1) = '#' then 1 else 0 end) as treeSum
from #test
*/

Drop table if exists #slopes
create table #slopes (x int, y int)

insert into #slopes values
(1,1),
(3,1),
(5,1),
(7,1),
(1,2)

drop table if exists #Temp
select 
	a.s,
	a.id,
	b.x,b.y,
	ROW_NUMBER() over(partition by b.y, b.x order by id) as rn
into #Temp
from #test a
inner join #slopes b on (a.id % b.y = 0) or id = 1

select 
	sum(
		case when 
			substring(s, 
						case when ((rn * a.x) - (a.x - 1)) % len(s) = 0 then 31
						else ((rn * a.x) - (a.x - 1)) % len(s) end 
						,1) 
			= '#' then 1 
		else 0 end
	) as treeSum,
	a.x,a.y
from #Temp a
group by 
a.x,a.y







--select 
--	s,
--	len(s),
--	id,
--	case when 
--			(case when ((id * b.x) - (b.x - 1)) % len(s) = 0 then 31
--			else ((id * b.x) - (b.x - 1)) % len(s) end
--			% b.y) > id then 0 
--			else
--			case when ((id * b.x) - (b.x - 1)) % len(s) = 0 then 31
--			else ((id * b.x) - (b.x - 1)) % len(s) end
--			end--- case when b.y = 2 then 3 else 0 end
--						  ,
--	replace(stuff(s,case when ((id * b.x) - (b.x - 1)) % len(s) = 0 then 31
--						  else ((id * b.x) - (b.x - 1)) % len(s) end --- case when b.y = 2 then 3 else 0 end
--						  , 1, 
--						  case when substring(s, 
--						  case when ((id * b.x) - (b.x - 1)) % len(s) = 0 then 31
--						  else ((id * b.x) - (b.x - 1)) % len(s) end --- case when b.y = 2 then 3 else 0 end
--						 ,1) = '#' then 'X' else 'O' end), '#', '.') as PatternReplaced,
--	--(((((id-1) % len(s))+1)*3) % len(s)) % 10 as PatternPos,
--	substring(s, 
--						  case when ((id * b.x) - (b.x - 1)) % len(s) = 0 then 31
--						  else ((id * b.x) - (b.x - 1)) % len(s) end --- case when b.y = 2 then 3 else 0 end
--						 ,1) as TreesInPath
--						 ,b.x, b.y
--	--sum(case when substring(s, ((((id-1) % len(s))+1)*3) % len(s), 1) = '#' then 1 else 0 end) as treeSum
--from #test
--cross join #slopes b
--order by 
--b.x,b.y





--select 
--	s,
--	len(s),
--	id,
--	case when 
--			(case when ((id * b.x) - (b.x - 1)) % len(s) = 0 then 31
--			else ((id * b.x) - (b.x - 1)) % len(s) end
--			% b.y) = 0 then 0 
--			else
--			case when ((id * b.x) - (b.x - 1)) % len(s) = 0 then 31
--			else ((id * b.x) - (b.x - 1)) % len(s) end - case when (case when ((id * b.x) - (b.x - 1)) % len(s) = 0 then 31
--															else ((id * b.x) - (b.x - 1)) % len(s) end
--															% b.y) = 0 then 1 end
--			end
--			,
--			case when ((id * b.x) - (b.x - 1)) % len(s) = 0 then 31
--			else ((id * b.x) - (b.x - 1)) % len(s) end
--			% b.y
--from #test
--cross join #slopes b
--where b.y = 2
--order by 
--b.x,b.y